--------------------------------------------------------------------------
-- This script updates a DCSTOOL 5.2 CCP Schema (corresponding to CWMS 2.1
-- to OpenDCS 6.1 Schema
--------------------------------------------------------------------------

-----------------------------------------------------------------------------
-- This software was written by Cove Software, LLC ("COVE") under contract 
-- to the United States Government. 
-- No warranty is provided or implied other than specific contractual terms
-- between COVE and the U.S. Government
-- 
-- Copyright 2014 U.S. Army Corps of Engineers, Hydrologic Engineering Center.
-- All rights reserved.
-----------------------------------------------------------------------------

set echo on
spool combined.log
    
whenever sqlerror continue
set define on
@@defines.sql

ALTER TABLE ENUM ADD DESCRIPTION VARCHAR2(400);

ALTER TABLE DATATYPE ADD DISPLAY_NAME VARCHAR2(64);

CREATE TABLE SCHEDULE_ENTRY
(
    SCHEDULE_ENTRY_ID NUMBER(18) NOT NULL,
    -- Unique name for this schedule entry.
    NAME VARCHAR2(64) NOT NULL,
    LOADING_APPLICATION_ID NUMBER(18),
    ROUTINGSPEC_ID NUMBER(18) NOT NULL,
    -- date/time for first execution.
    -- Null means start immediately.
    START_TIME date,
    -- Used to interpret interval adding to start time.
    TIMEZONE VARCHAR2(32),
    -- Any valid interval in this database.
    -- Null means execute one time only.
    RUN_INTERVAL VARCHAR2(64),
    -- true or false
    ENABLED VARCHAR2(5) NOT NULL,
    LAST_MODIFIED date NOT NULL,
    db_office_code integer default &dflt_office_code,
    PRIMARY KEY (SCHEDULE_ENTRY_ID),
    CONSTRAINT SENAME_UNIQUE UNIQUE(NAME, db_office_code)
) &TBL_SPACE_SPEC;

-- Describes a schedule run.
CREATE TABLE SCHEDULE_ENTRY_STATUS
(
    SCHEDULE_ENTRY_STATUS_ID NUMBER(18) NOT NULL,
    SCHEDULE_ENTRY_ID NUMBER(18) NOT NULL,
    RUN_START_TIME date NOT NULL,
    -- Null means no messages yet received
    LAST_MESSAGE_TIME date,
    -- Null means still running.
    RUN_COMPLETE_TIME date,
    -- Hostname or IP Address of server where the routing spec was run.
    HOSTNAME VARCHAR2(64) NOT NULL,
    -- Brief string describing current status: "initializing", "running", "complete", "failed".
    RUN_STATUS VARCHAR2(24) NOT NULL,
    -- Number of messages successfully processed during the run.
    NUM_MESSAGES INT DEFAULT 0 NOT NULL,
    -- Number of decoding errors encountered.
    NUM_DECODE_ERRORS INT DEFAULT 0 NOT NULL,
    -- Number of distinct platforms seen
    NUM_PLATFORMS INT DEFAULT 0 NOT NULL,
    LAST_SOURCE VARCHAR2(32),
    LAST_CONSUMER VARCHAR2(32),
    -- Last time this entry was written to the database.
    LAST_MODIFIED date NOT NULL,
    PRIMARY KEY (SCHEDULE_ENTRY_STATUS_ID),
    CONSTRAINT sched_entry_start_unique UNIQUE (SCHEDULE_ENTRY_ID, RUN_START_TIME)
) &TBL_SPACE_SPEC;

ALTER TABLE SCHEDULE_ENTRY
    ADD CONSTRAINT SCHEDULE_ENTRY_FKLA
    FOREIGN KEY (LOADING_APPLICATION_ID)
    REFERENCES HDB_LOADING_APPLICATION (LOADING_APPLICATION_ID)
;

ALTER TABLE SCHEDULE_ENTRY
    ADD CONSTRAINT SCHEDULE_ENTRY_FKRS
    FOREIGN KEY (ROUTINGSPEC_ID)
    REFERENCES ROUTINGSPEC (ID)
;

ALTER TABLE SCHEDULE_ENTRY_STATUS
    ADD CONSTRAINT SCHEDULE_ENTRY_STATUS_FKSE
    FOREIGN KEY (SCHEDULE_ENTRY_ID)
    REFERENCES SCHEDULE_ENTRY (SCHEDULE_ENTRY_ID)
;


CREATE TABLE DACQ_EVENT
(
    -- Surrogate Key. Events are numbered from 0...MAX
    DACQ_EVENT_ID NUMBER(18) NOT NULL,
    SCHEDULE_ENTRY_STATUS_ID NUMBER(18),
    PLATFORM_ID NUMBER(18),
    EVENT_TIME date NOT NULL,
    -- INFO = 3, WARNING = 4, FAILURE = 5, FATAL = 6
    --
    EVENT_PRIORITY INT NOT NULL,
    -- Software subsystem that generated this event
    SUBSYSTEM VARCHAR2(24),
    -- If this is related to a message, this holds the message's local_recv_time.
    MSG_RECV_TIME DATE,
    EVENT_TEXT VARCHAR2(256) NOT NULL,
    db_office_code integer default &dflt_office_code,
    PRIMARY KEY (DACQ_EVENT_ID)
) &TBL_SPACE_SPEC;

ALTER TABLE DACQ_EVENT
    ADD CONSTRAINT DACQ_EVENT_FKSE
    FOREIGN KEY (SCHEDULE_ENTRY_STATUS_ID)
    REFERENCES SCHEDULE_ENTRY_STATUS (SCHEDULE_ENTRY_STATUS_ID)
;


CREATE TABLE PLATFORM_STATUS
(
    PLATFORM_ID NUMBER(18) NOT NULL,
    -- Time of last station contact, whether or not a message was successfully received.
    LAST_CONTACT_TIME date,
    -- Time stamp of last message received. This is the message time stamp parsed from the header.
    -- Null means no message ever received.
    LAST_MESSAGE_TIME date,
    -- Up to 8 failure codes describing data acquisition and decoding.
    LAST_FAILURE_CODES VARCHAR2(8),
    -- Null means no errors encountered ever.
    LAST_ERROR_TIME date,
    -- Points to status of last routing spec / schedule entry run.
    -- Null means that the schedule entry is too old and has been purged.
    LAST_SCHEDULE_ENTRY_STATUS_ID NUMBER(18),
    ANNOTATION VARCHAR2(400),
    db_office_code integer default &dflt_office_code,
    PRIMARY KEY (PLATFORM_ID, db_office_code)
) &TBL_SPACE_SPEC;

-- ALTER TABLE PLATFORM_STATUS
--     ADD CONSTRAINT PLATFORM_STATUS_FKPL
--     FOREIGN KEY (PLATFORM_ID)
--     REFERENCES PLATFORM (ID)
-- ;
 
ALTER TABLE PLATFORM_STATUS
    ADD CONSTRAINT PLATFORM_STATUS_FKSE
    FOREIGN KEY (LAST_SCHEDULE_ENTRY_STATUS_ID)
    REFERENCES SCHEDULE_ENTRY_STATUS (SCHEDULE_ENTRY_STATUS_ID)
;


ALTER TABLE NETWORKLISTENTRY ADD PLATFORM_NAME VARCHAR2(24);
ALTER TABLE NETWORKLISTENTRY ADD DESCRIPTION VARCHAR2(80);

ALTER TABLE TRANSPORTMEDIUM ADD LOGGERTYPE VARCHAR2(24);
ALTER TABLE TRANSPORTMEDIUM ADD BAUD INT;
ALTER TABLE TRANSPORTMEDIUM ADD STOPBITS INT;
ALTER TABLE TRANSPORTMEDIUM ADD PARITY VARCHAR2(1);
ALTER TABLE TRANSPORTMEDIUM ADD DATABITS INT;
ALTER TABLE TRANSPORTMEDIUM ADD DOLOGIN VARCHAR2(5);
ALTER TABLE TRANSPORTMEDIUM ADD USERNAME VARCHAR2(32);
ALTER TABLE TRANSPORTMEDIUM ADD PASSWORD VARCHAR2(32);

-- This table holds the XML definition for a composite computation diagram in the GUI.
-- Concatenate all elements for a given composite comp by part_number to form the entire XML.
-- The XML depends on the SQL composite/member relations. You cannot alter one without altering the other.
CREATE TABLE CP_COMPOSITE_DIAGRAM
(
    COMPOSITE_COMPUTATION_ID NUMBER(18)  NOT NULL,
    BLOCK_NUM INT NOT NULL,
    DIAGRAM_XML VARCHAR2(4000) NOT NULL,
    PRIMARY KEY (COMPOSITE_COMPUTATION_ID, BLOCK_NUM)
) &TBL_SPACE_SPEC;

-- This table relates a composite computation to its member component computations.
-- A composite has multiple components, each with a different execution order.
CREATE TABLE CP_COMPOSITE_MEMBER
(
    COMPOSITE_COMPUTATION_ID NUMBER(18) NOT NULL,
    -- Determines the execution order of the component.
    EXEC_ORDER INT NOT NULL,
    COMPONENT_COMPUTATION_ID NUMBER(18) NOT NULL,
    PRIMARY KEY (COMPOSITE_COMPUTATION_ID, EXEC_ORDER)
) &TBL_SPACE_SPEC;

ALTER TABLE CP_COMPOSITE_DIAGRAM
    ADD CONSTRAINT CP_COMPOSITE_DIAGRAM_FK
    FOREIGN KEY (COMPOSITE_COMPUTATION_ID)
    REFERENCES CP_COMPUTATION (COMPUTATION_ID)
;

ALTER TABLE CP_COMPOSITE_MEMBER
    ADD CONSTRAINT CP_COMPOSITE_MEMBER_FK1
    FOREIGN KEY (COMPOSITE_COMPUTATION_ID)
    REFERENCES CP_COMPUTATION (COMPUTATION_ID)
;

ALTER TABLE CP_COMPOSITE_MEMBER
    ADD CONSTRAINT CP_COMPOSITE_MEMBER_FK2
    FOREIGN KEY (COMPONENT_COMPUTATION_ID)
    REFERENCES CP_COMPUTATION (COMPUTATION_ID)
;

CREATE TABLE SERIAL_PORT_STATUS
(
    -- Combo of DigiHostName:PortNumber
    PORT_NAME VARCHAR2(48) NOT NULL,
    -- True when port is locked.
    IN_USE VARCHAR2(5) DEFAULT 'FALSE' NOT NULL,
    -- Name of routing spec (or other process) that last used (or is currently using) the port.
    -- Null means never been used.
    LAST_USED_BY_PROC VARCHAR2(64),
    -- Hostname or IP Address from which this port was last used (or is currently being used).
    -- Null means never been used.
    LAST_USED_BY_HOST VARCHAR2(64),
    -- Java msec Date/Time this port was last used.
    LAST_ACTIVITY_TIME DATE,
    -- Java msec Date/Time that a message was successfully received on this port.
    LAST_RECEIVE_TIME DATE,
    -- The Medium ID (e.g. logger name) from which a message was last received on this port.
    LAST_MEDIUM_ID VARCHAR2(64),
    -- Java msec Date/Time of the last time an error occurred on this port.
    LAST_ERROR_TIME DATE,
    -- Short string. Usually one of the following:
    -- idle, dialing, login, receiving, goodbye, error
    PORT_STATUS VARCHAR2(32),
    db_office_code integer default &dflt_office_code,
    PRIMARY KEY (PORT_NAME, db_office_code)
) &TBL_SPACE_SPEC;


--------------------------------------------------------------------------------------------------
-- From diff of 2.1 
--------------------------------------------------------------------------------------------------
ALTER TABLE CCP.CP_COMPUTATION DROP CONSTRAINT CP_COMPUTATION_CK;

REVOKE DELETE, INSERT, SELECT, UPDATE ON CCP.TSDB_SEVERITY_ACTION_ASSOC FROM CCP_USERS;

REVOKE DELETE, INSERT, SELECT, UPDATE ON CCP.TSDB_SEVERITY FROM CCP_USERS;

REVOKE DELETE, INSERT, SELECT, UPDATE ON CCP.TSDB_ALARM_HISTORY FROM CCP_USERS;

REVOKE DELETE, INSERT, SELECT, UPDATE ON CCP.TSDB_ALARM_ASSERTION FROM CCP_USERS;

REVOKE DELETE, INSERT, SELECT, UPDATE ON CCP.TSDB_ALARM_ACTION_PROPERTY FROM CCP_USERS;

REVOKE DELETE, INSERT, SELECT, UPDATE ON CCP.TSDB_ALARM_ACTION FROM CCP_USERS;

REVOKE DELETE, INSERT, SELECT, UPDATE ON CCP.SITE FROM CCP_USERS;

REVOKE DELETE, INSERT, SELECT, UPDATE ON CCP.NWISSITEDBREFERENCE FROM CCP_USERS;

REVOKE DELETE, INSERT, SELECT, UPDATE ON CCP.GOES_PDT FROM CCP_USERS;

REVOKE DELETE, INSERT, SELECT, UPDATE ON CCP.GOES_CDT FROM CCP_USERS;

REVOKE DELETE, INSERT, SELECT, UPDATE ON CCP.DCP_TRANS_DAY_MAP FROM CCP_USERS;

ALTER TABLE CCP.TSDB_SEVERITY_ACTION_ASSOC
 DROP PRIMARY KEY CASCADE;

DROP TABLE CCP.TSDB_SEVERITY_ACTION_ASSOC CASCADE CONSTRAINTS;

ALTER TABLE CCP.TSDB_SEVERITY
 DROP PRIMARY KEY CASCADE;

DROP TABLE CCP.TSDB_SEVERITY CASCADE CONSTRAINTS;

ALTER TABLE CCP.TSDB_ALARM_HISTORY
 DROP PRIMARY KEY CASCADE;

DROP TABLE CCP.TSDB_ALARM_HISTORY CASCADE CONSTRAINTS;

ALTER TABLE CCP.TSDB_ALARM_ASSERTION
 DROP PRIMARY KEY CASCADE;

DROP TABLE CCP.TSDB_ALARM_ASSERTION CASCADE CONSTRAINTS;

ALTER TABLE CCP.TSDB_ALARM_ACTION_PROPERTY
 DROP PRIMARY KEY CASCADE;

DROP TABLE CCP.TSDB_ALARM_ACTION_PROPERTY CASCADE CONSTRAINTS;

ALTER TABLE CCP.TSDB_ALARM_ACTION
 DROP PRIMARY KEY CASCADE;

DROP TABLE CCP.TSDB_ALARM_ACTION CASCADE CONSTRAINTS;

DROP TABLE CCP.SITE CASCADE CONSTRAINTS;

DROP TABLE CCP.NWISSITEDBREFERENCE CASCADE CONSTRAINTS;

ALTER TABLE CCP.GOES_PDT
 DROP PRIMARY KEY CASCADE;

DROP TABLE CCP.GOES_PDT CASCADE CONSTRAINTS;

ALTER TABLE CCP.GOES_CDT
 DROP PRIMARY KEY CASCADE;

DROP TABLE CCP.GOES_CDT CASCADE CONSTRAINTS;

ALTER TABLE CCP.DCP_TRANS_DAY_MAP
 DROP PRIMARY KEY CASCADE;

DROP TABLE CCP.DCP_TRANS_DAY_MAP CASCADE CONSTRAINTS;

REVOKE SELECT ON CCP.CCP_SEQ FROM CCP_USERS;
DROP SEQUENCE CCP.CCP_SEQ;

DROP INDEX CCP.SITENAME_IDTYPEIDX;
ALTER TABLE SITENAME ADD CONSTRAINT SITENAME_PK PRIMARY KEY(SITEID, NAMETYPE) USING INDEX &TBL_SPACE_SPEC;

DROP INDEX CCP.EUABBRIDX;

DROP INDEX CCP.DATATYPECODE_IDIDX;
create unique index datatypecode_ididx
    on datatype (standard, code, db_office_code) &TBL_SPACE_SPEC;

DROP INDEX CCP.CP_COMP_TASKLIST_APP_IDX;
create unique index cp_comp_tasklist_idx_app
    on cp_comp_tasklist(loading_application_id, record_num) &TBL_SPACE_SPEC;

ALTER TABLE CCP.CP_ALGORITHM MODIFY(EXEC_CLASS VARCHAR2(240 BYTE));

ALTER TABLE CCP.CP_ALGO_PROPERTY MODIFY(PROP_VALUE  NULL);

CREATE TABLE CP_DEPENDS_NOTIFY
(
    RECORD_NUM NUMBER(18) NOT NULL,
    EVENT_TYPE CHAR NOT NULL,
    KEY NUMBER(18) NOT NULL,
    DATE_TIME_LOADED date NOT NULL,
    PRIMARY KEY (RECORD_NUM)
) &TBL_SPACE_SPEC;


ALTER TABLE CCP.DATATYPE MODIFY(CODE VARCHAR2(65 BYTE));

ALTER TABLE DECODESDATABASEVERSION RENAME COLUMN VERSION TO VERSION_NUM;
ALTER TABLE DECODESDATABASEVERSION RENAME COLUMN options TO DB_OPTIONS;

ALTER TABLE CCP.ENGINEERINGUNIT MODIFY(NAME  NULL);

ALTER TABLE CCP.ENGINEERINGUNIT MODIFY(FAMILY  NOT NULL);

ALTER TABLE CCP.ENGINEERINGUNIT MODIFY(MEASURES  NOT NULL);

ALTER TABLE ENGINEERINGUNIT ADD CONSTRAINT EU_PK PRIMARY KEY(UNITABBR, db_office_code) USING INDEX &TBL_SPACE_SPEC; 

ALTER TABLE CCP.EQUIPMENTPROPERTY RENAME COLUMN VALUE TO PROP_VALUE;

ALTER TABLE CCP.HDB_LOADING_APPLICATION MODIFY(MANUAL_EDIT_APP  DEFAULT 'N');

UPDATE NETWORKLIST SET TRANSPORTMEDIUMTYPE = 'goes' WHERE TRANSPORTMEDIUMTYPE IS NULL;

ALTER TABLE CCP.NETWORKLIST MODIFY(TRANSPORTMEDIUMTYPE  NOT NULL);

UPDATE NETWORKLIST SET SITENAMETYPEPREFERENCE = 'CWMS' 
  WHERE SITENAMETYPEPREFERENCE IS NULL;

ALTER TABLE CCP.NETWORKLIST MODIFY(SITENAMETYPEPREFERENCE  NOT NULL);

ALTER TABLE CCP.PRESENTATIONGROUP MODIFY(LASTMODIFYTIME NOT NULL);

ALTER TABLE CCP.PRESENTATIONGROUP MODIFY(ISPRODUCTION  NOT NULL);

ALTER TABLE CCP.PRESENTATIONGROUP MODIFY(ISPRODUCTION  DEFAULT 'FALSE');

UPDATE CCP.ROUTINGSPEC SET ENABLEEQUATIONS = 'FALSE' 
  WHERE ENABLEEQUATIONS IS NULL;

ALTER TABLE CCP.ROUTINGSPEC MODIFY(ENABLEEQUATIONS  NOT NULL);

UPDATE CCP.ROUTINGSPEC SET USEPERFORMANCEMEASUREMENTS = 'FALSE' 
  WHERE USEPERFORMANCEMEASUREMENTS IS NULL;

ALTER TABLE CCP.ROUTINGSPEC MODIFY(USEPERFORMANCEMEASUREMENTS  NOT NULL);

UPDATE CCP.ROUTINGSPEC SET ISPRODUCTION = 'FALSE' 
  WHERE ISPRODUCTION IS NULL;

ALTER TABLE CCP.ROUTINGSPEC MODIFY(ISPRODUCTION  NOT NULL);

ALTER TABLE CCP.ROUTINGSPECPROPERTY RENAME COLUMN NAME TO PROP_NAME;

ALTER TABLE CCP.ROUTINGSPECPROPERTY RENAME COLUMN VALUE TO PROP_VALUE;

ALTER TABLE CCP.TSDB_DATABASE_VERSION RENAME COLUMN VERSION TO DB_VERSION;

UPDATE CCP.TSDB_GROUP_MEMBER_GROUP SET INCLUDE_GROUP = 'A'
  WHERE INCLUDE_GROUP IS NULL;

ALTER TABLE CCP.TSDB_GROUP_MEMBER_GROUP
MODIFY(INCLUDE_GROUP CHAR(1 BYTE) NOT NULL);

ALTER TABLE CCP.TSDB_GROUP_MEMBER_OTHER MODIFY(MEMBER_VALUE VARCHAR2(240 BYTE));

ALTER TABLE CCP.TSDB_GROUP_MEMBER_TS RENAME COLUMN data_id TO TS_ID;

CREATE UNIQUE INDEX CCP.ENNAME_UNIQUE ON CCP.ENUM (NAME, DB_OFFICE_CODE) &TBL_SPACE_SPEC;

CREATE UNIQUE INDEX CCP.GROUP_SEQ_UNIQUE ON CCP.DATASOURCEGROUPMEMBER
(GROUPID, SEQUENCENUM) &TBL_SPACE_SPEC;

CREATE UNIQUE INDEX CCP.NL_TRANSPORT_UNIQUE ON CCP.NETWORKLISTENTRY
(NETWORKLISTID, TRANSPORTID) &TBL_SPACE_SPEC;

UPDATE CCP.CONFIGSENSOR SET SENSORNAME = 'X' WHERE SENSORNAME IS NULL;

ALTER TABLE CCP.CONFIGSENSOR MODIFY(SENSORNAME  NOT NULL);

UPDATE CCP.CONFIGSENSOR SET RECORDINGMODE = 'U' WHERE RECORDINGMODE IS NULL;

ALTER TABLE CCP.CONFIGSENSOR MODIFY(RECORDINGMODE  NOT NULL);

ALTER TABLE CCP.CONFIGSENSORPROPERTY RENAME COLUMN NAME TO PROP_NAME;

ALTER TABLE CCP.CONFIGSENSORPROPERTY RENAME COLUMN VALUE TO PROP_VALUE;

ALTER TABLE CCP.CP_COMPUTATION MODIFY(ENABLED VARCHAR2(5 BYTE));

UPDATE CCP.CP_COMPUTATION SET ENABLED = 'FALSE' WHERE ENABLED = 'N' OR ENABLED IS NULL;

ALTER TABLE CCP.CP_COMPUTATION MODIFY(ENABLED DEFAULT 'FALSE');

ALTER TABLE CCP.CP_COMPUTATION MODIFY(ENABLED NOT NULL);

ALTER TABLE CP_COMP_DEPENDS RENAME COLUMN SITE_DATATYPE_ID TO TS_ID;

CREATE TABLE CCP.CP_COMP_DEPENDS_SCRATCHPAD
(
  TS_ID           NUMBER(18)                    NOT NULL,
  COMPUTATION_ID  NUMBER(18)                    NOT NULL
) &TBL_SPACE_SPEC;

ALTER TABLE CCP.CP_COMP_DEPENDS_SCRATCHPAD
 ADD PRIMARY KEY (TS_ID, COMPUTATION_ID);

ALTER TABLE CCP.CP_COMP_PROC_LOCK RENAME COLUMN HOST TO HOSTNAME;

ALTER TABLE CCP.CP_COMP_TS_PARM RENAME COLUMN INTERVAL TO INTERVAL_ABBR;

ALTER TABLE CCP.CP_COMP_TS_PARM DROP COLUMN GROUP_ID;

ALTER TABLE CCP.CP_COMP_TS_PARM MODIFY(TABLE_SELECTOR VARCHAR2(240 BYTE));

UPDATE CCP.CP_COMP_TS_PARM SET DELTA_T = 0 WHERE DELTA_T IS NULL;

ALTER TABLE CCP.CP_COMP_TS_PARM MODIFY(DELTA_T  NOT NULL);

ALTER TABLE CCP.CP_COMP_TS_PARM ADD(SITE_ID NUMBER(18,0));

ALTER TABLE CCP.DATAPRESENTATION ADD (MAX_VALUE  FLOAT(126));

ALTER TABLE CCP.DATAPRESENTATION ADD (MIN_VALUE  FLOAT(126));

ALTER TABLE CCP.DECODESSCRIPT RENAME COLUMN TYPE TO SCRIPT_TYPE;

UPDATE CCP.DECODESSCRIPT SET DATAORDER = 'A' WHERE DATAORDER IS NULL;

ALTER TABLE CCP.DECODESSCRIPT MODIFY(DATAORDER  NOT NULL);

ALTER TABLE CCP.DECODESSCRIPT MODIFY(DATAORDER  DEFAULT 'A');

UPDATE CCP.PLATFORM SET ISPRODUCTION = 'FALSE' WHERE ISPRODUCTION IS NULL;

ALTER TABLE CCP.PLATFORM MODIFY(ISPRODUCTION  NOT NULL);

ALTER TABLE CCP.PLATFORMPROPERTY RENAME COLUMN NAME TO PROP_NAME;

ALTER TABLE CCP.PLATFORMPROPERTY RENAME COLUMN VALUE TO PROP_VALUE;

ALTER TABLE CCP.PLATFORMSENSORPROPERTY RENAME COLUMN NAME TO PROP_NAME;

ALTER TABLE CCP.PLATFORMSENSORPROPERTY RENAME COLUMN VALUE TO PROP_VALUE;

ALTER TABLE CCP.TRANSPORTMEDIUM MODIFY(MEDIUMID  NOT NULL);

DROP INDEX CCP.TRANSPORTMEDIUMIDX;

CREATE UNIQUE INDEX CCP.TRANSPORTMEDIUMIDX ON CCP.TRANSPORTMEDIUM
(MEDIUMTYPE, MEDIUMID, DB_OFFICE_CODE) &TBL_SPACE_SPEC;

DROP INDEX CCP.CP_COMP_TASKLIST_IDX_APP;

CREATE UNIQUE INDEX CCP.CP_COMP_TASKLIST_IDX_APP ON CCP.CP_COMP_TASKLIST
(LOADING_APPLICATION_ID, RECORD_NUM) &TBL_SPACE_SPEC;

CREATE UNIQUE INDEX CCP.PRES_DT_UNIQUE ON CCP.DATAPRESENTATION (GROUPID, DATATYPEID) &TBL_SPACE_SPEC;

CREATE UNIQUE INDEX CCP.SITE_DESIGNATOR_UNIQUE ON CCP.PLATFORM
(SITEID, PLATFORMDESIGNATOR) &TBL_SPACE_SPEC;

CREATE INDEX CCP.PLATFORM_ID_IDX ON CCP.DACQ_EVENT (PLATFORM_ID) &TBL_SPACE_SPEC;

ALTER TABLE CCP.DATASOURCEGROUPMEMBER
 ADD PRIMARY KEY
  (GROUPID, MEMBERID);

ALTER TABLE CCP.DATASOURCEGROUPMEMBER
 ADD CONSTRAINT GROUP_SEQ_UNIQUE
  UNIQUE (GROUPID, SEQUENCENUM)
  USING INDEX CCP.GROUP_SEQ_UNIQUE;

ALTER TABLE CCP.ENUM
 ADD CONSTRAINT ENNAME_UNIQUE
  UNIQUE (NAME, DB_OFFICE_CODE)
  USING INDEX CCP.ENNAME_UNIQUE;

ALTER TABLE CCP.ROUTINGSPECNETWORKLIST
 ADD PRIMARY KEY (ROUTINGSPECID, NETWORKLISTNAME);

ALTER TABLE CCP.ROUTINGSPECPROPERTY
 ADD PRIMARY KEY (ROUTINGSPECID, PROP_NAME);

ALTER TABLE CCP.SITE_PROPERTY
 ADD PRIMARY KEY (SITE_ID, PROP_NAME);

ALTER TABLE CCP.TSDB_GROUP_MEMBER_DT
 DROP CONSTRAINT TSDB_GROUP_MEMBER_DT_FK;

ALTER TABLE CCP.TSDB_GROUP_MEMBER_DT
 ADD CONSTRAINT TSDB_GROUP_MEMBER_DT_FKGR 
  FOREIGN KEY (GROUP_ID) 
  REFERENCES CCP.TSDB_GROUP (GROUP_ID);

ALTER TABLE CCP.TSDB_GROUP_MEMBER_GROUP
 DROP CONSTRAINT TSDB_GROUP_MEMBER_GROUP_FKC;

ALTER TABLE CCP.TSDB_GROUP_MEMBER_GROUP
 ADD CONSTRAINT TSDB_GROUP_MEMBER_GROUP_FKCH
  FOREIGN KEY (CHILD_GROUP_ID)
  REFERENCES CCP.TSDB_GROUP (GROUP_ID);

ALTER TABLE CCP.TSDB_GROUP_MEMBER_GROUP
 DROP CONSTRAINT TSDB_GROUP_MEMBER_GROUP_FKP;

ALTER TABLE CCP.TSDB_GROUP_MEMBER_GROUP
 ADD CONSTRAINT TSDB_GROUP_MEMBER_GROUP_FKPA
  FOREIGN KEY (PARENT_GROUP_ID)
  REFERENCES CCP.TSDB_GROUP (GROUP_ID);

ALTER TABLE CCP.TSDB_GROUP_MEMBER_OTHER
 DROP CONSTRAINT TSDB_GROUP_MEMBER_OTHER_FK;

ALTER TABLE CCP.TSDB_GROUP_MEMBER_OTHER
 ADD CONSTRAINT TSDB_GROUP_MEMBER_OTHER_FKGR
  FOREIGN KEY (GROUP_ID)
  REFERENCES CCP.TSDB_GROUP (GROUP_ID);

ALTER TABLE CCP.TSDB_GROUP_MEMBER_SITE
 DROP CONSTRAINT TSDB_GROUP_MEMBER_SITE_FK;

ALTER TABLE CCP.TSDB_GROUP_MEMBER_SITE
 ADD CONSTRAINT TSDB_GROUP_MEMBER_SITE_FKGR
  FOREIGN KEY (GROUP_ID)
  REFERENCES CCP.TSDB_GROUP (GROUP_ID);

ALTER TABLE CCP.TSDB_GROUP_MEMBER_TS
 DROP CONSTRAINT TSDB_GROUP_MEMBER_TS_FK;

ALTER TABLE CCP.TSDB_GROUP_MEMBER_TS
 ADD CONSTRAINT TSDB_GROUP_MEMBER_TS_FKGR
  FOREIGN KEY (GROUP_ID)
  REFERENCES CCP.TSDB_GROUP (GROUP_ID);

ALTER TABLE CCP.CONFIGSENSOR
 ADD PRIMARY KEY
  (CONFIGID, SENSORNUMBER);

ALTER TABLE CCP.CONFIGSENSORDATATYPE
 ADD PRIMARY KEY
  (CONFIGID, SENSORNUMBER, DATATYPEID);

ALTER TABLE CCP.CONFIGSENSORPROPERTY
 ADD PRIMARY KEY
  (CONFIGID, SENSORNUMBER, PROP_NAME);

ALTER TABLE CCP.CP_COMP_PROPERTY DROP CONSTRAINT CP_COMP_PROPERTY_FK;

ALTER TABLE CCP.CP_COMP_PROPERTY ADD CONSTRAINT CP_COMP_PROPERTY_FK
  FOREIGN KEY (COMPUTATION_ID) REFERENCES CCP.CP_COMPUTATION (COMPUTATION_ID);

ALTER TABLE CCP.DATAPRESENTATION ADD CONSTRAINT PRES_DT_UNIQUE
  UNIQUE (GROUPID, DATATYPEID) USING INDEX CCP.PRES_DT_UNIQUE;

ALTER TABLE CCP.PLATFORM
 ADD CONSTRAINT SITE_DESIGNATOR_UNIQUE
  UNIQUE (SITEID, PLATFORMDESIGNATOR)
  USING INDEX CCP.SITE_DESIGNATOR_UNIQUE;

ALTER TABLE CCP.PLATFORMPROPERTY ADD PRIMARY KEY (PLATFORMID, PROP_NAME);

ALTER TABLE CCP.PLATFORMSENSOR ADD PRIMARY KEY (PLATFORMID, SENSORNUMBER);

ALTER TABLE CCP.PLATFORMSENSORPROPERTY ADD PRIMARY KEY
  (PLATFORMID, SENSORNUMBER, PROP_NAME);

ALTER TABLE CCP.TRANSPORTMEDIUM ADD PRIMARY KEY (PLATFORMID, MEDIUMTYPE);

ALTER TABLE CCP.CP_COMP_DEPENDS_SCRATCHPAD
 ADD CONSTRAINT CP_COMP_DEPENDS_SCRATCHPAD_FK
  FOREIGN KEY (COMPUTATION_ID)
  REFERENCES CCP.CP_COMPUTATION (COMPUTATION_ID);

ALTER TABLE CCP.REF_LOADING_APPLICATION_PROP
 ADD CONSTRAINT APP_PROP_FKLA
  FOREIGN KEY (LOADING_APPLICATION_ID)
  REFERENCES CCP.HDB_LOADING_APPLICATION (LOADING_APPLICATION_ID);

ALTER TABLE CCP.CONFIGSENSORDATATYPE
 ADD CONSTRAINT CONFIGSENSORDATATYPE_FKCS
  FOREIGN KEY (CONFIGID, SENSORNUMBER)
  REFERENCES CCP.CONFIGSENSOR (CONFIGID,SENSORNUMBER);

ALTER TABLE CCP.CONFIGSENSORPROPERTY
 ADD CONSTRAINT CONFIGSENSORPROPERTY_FK
  FOREIGN KEY (CONFIGID, SENSORNUMBER)
  REFERENCES CCP.CONFIGSENSOR (CONFIGID,SENSORNUMBER);

ALTER TABLE CCP.CP_COMPUTATION
 ADD CONSTRAINT CP_COMPUTATION_FKGR
  FOREIGN KEY (GROUP_ID)
  REFERENCES CCP.TSDB_GROUP (GROUP_ID);
ALTER TABLE CCP.CP_COMP_DEPENDS
 ADD CONSTRAINT CP_COMP_DEPENDS_FK
  FOREIGN KEY (COMPUTATION_ID)
  REFERENCES CCP.CP_COMPUTATION (COMPUTATION_ID);

ALTER TABLE CCP.CP_COMP_PROC_LOCK
 ADD CONSTRAINT CP_COMP_PROC_LOCK_FKLA
  FOREIGN KEY (LOADING_APPLICATION_ID)
  REFERENCES CCP.HDB_LOADING_APPLICATION (LOADING_APPLICATION_ID);

ALTER TABLE CCP.CP_COMP_TASKLIST
 ADD CONSTRAINT CP_COMP_TASKLIST_FKLA
  FOREIGN KEY (LOADING_APPLICATION_ID)
  REFERENCES CCP.HDB_LOADING_APPLICATION (LOADING_APPLICATION_ID);

ALTER TABLE CCP.CP_COMP_TS_PARM
 ADD CONSTRAINT CP_COMP_TS_PARM_FKCO
  FOREIGN KEY (COMPUTATION_ID)
  REFERENCES CCP.CP_COMPUTATION (COMPUTATION_ID);

ALTER TABLE CCP.PLATFORMSENSORPROPERTY
 ADD CONSTRAINT PLATFORMSENSORPROPERTY_FKPS
  FOREIGN KEY (PLATFORMID, SENSORNUMBER)
  REFERENCES CCP.PLATFORMSENSOR (PLATFORMID,SENSORNUMBER);

-- Add db_office_code and set default to sys_context
ALTER TABLE CCP.CP_ALGORITHM MODIFY(DB_OFFICE_CODE  DEFAULT sys_context('CCPENV','CCP_OFFICE_CODE'));
ALTER TABLE CCP.DATASOURCE MODIFY(DB_OFFICE_CODE DEFAULT sys_context('CCPENV','CCP_OFFICE_CODE'));
ALTER TABLE CCP.ENGINEERINGUNIT ADD (DB_OFFICE_CODE INTEGER DEFAULT sys_context('CCPENV','CCP_OFFICE_CODE'));
ALTER TABLE CCP.ENUM MODIFY(DB_OFFICE_CODE DEFAULT sys_context('CCPENV','CCP_OFFICE_CODE'));
ALTER TABLE CCP.EQUIPMENTMODEL MODIFY(DB_OFFICE_CODE DEFAULT sys_context('CCPENV','CCP_OFFICE_CODE'));
ALTER TABLE CCP.HDB_LOADING_APPLICATION MODIFY(DB_OFFICE_CODE DEFAULT sys_context('CCPENV','CCP_OFFICE_CODE'));
ALTER TABLE CCP.NETWORKLIST MODIFY(DB_OFFICE_CODE DEFAULT sys_context('CCPENV','CCP_OFFICE_CODE'));
ALTER TABLE CCP.PLATFORMCONFIG MODIFY(DB_OFFICE_CODE DEFAULT sys_context('CCPENV','CCP_OFFICE_CODE'));
ALTER TABLE CCP.PRESENTATIONGROUP MODIFY(DB_OFFICE_CODE DEFAULT sys_context('CCPENV','CCP_OFFICE_CODE'));
ALTER TABLE CCP.ROUTINGSPEC MODIFY(DB_OFFICE_CODE DEFAULT sys_context('CCPENV','CCP_OFFICE_CODE'));
ALTER TABLE CCP.TSDB_GROUP MODIFY(DB_OFFICE_CODE DEFAULT sys_context('CCPENV','CCP_OFFICE_CODE'));
ALTER TABLE CCP.UNITCONVERTER ADD (DB_OFFICE_CODE INTEGER DEFAULT sys_context('CCPENV','CCP_OFFICE_CODE')); 
ALTER TABLE CCP.CP_COMPUTATION MODIFY(DB_OFFICE_CODE DEFAULT sys_context('CCPENV','CCP_OFFICE_CODE'));
ALTER TABLE CCP.TRANSPORTMEDIUM ADD (DB_OFFICE_CODE INTEGER DEFAULT sys_context('CCPENV','CCP_OFFICE_CODE'));
ALTER TABLE DATATYPE ADD db_office_code INTEGER DEFAULT &dflt_office_code;



DROP PUBLIC SYNONYM siteidseq;
DROP PUBLIC SYNONYM equipmentidseq;
DROP PUBLIC SYNONYM enumidseq;
DROP PUBLIC SYNONYM datatypeidseq;
DROP PUBLIC SYNONYM platformidseq;
DROP PUBLIC SYNONYM platformconfigidseq;
DROP PUBLIC SYNONYM decodesscriptidseq;
DROP PUBLIC SYNONYM routingspecidseq;
DROP PUBLIC SYNONYM datasourceidseq;
DROP PUBLIC SYNONYM networklistidseq;
DROP PUBLIC SYNONYM presentationgroupidseq;
DROP PUBLIC SYNONYM datapresentationidseq;
DROP PUBLIC SYNONYM unitconverteridseq;
DROP PUBLIC SYNONYM cp_algorithmidseq;
DROP PUBLIC SYNONYM cp_computationidseq;
DROP PUBLIC SYNONYM tsdb_groupidseq;

delete from DecodesDatabaseVersion;
insert into DecodesDatabaseVersion values(11, 'Updated from 5.2');
delete from tsdb_database_version;
insert into tsdb_database_version values(10, 'Updated from 5.2');

spool off
exit;
