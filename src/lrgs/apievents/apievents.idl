/*
*  $Id$
*
*  $Source$
*
*  $State$
*
*  $Log$
*  Revision 1.1  2008/04/04 18:21:11  cvs
*  Added legacy code to repository
*
*  Revision 1.4  2000/03/30 20:48:02  mike
*  Added getLrgsTime() method.
*
*  Revision 1.3  2000/03/16 20:27:11  mike
*  dev
*
*  Revision 1.2  2000/02/18 02:52:06  mike
*  created
*
*  Revision 1.1  2000/02/17 21:39:43  mike
*  created.
*
*/

module apievents
{
	// Basic exception. Codes are handlied by apicommon.ExceptionCode class.
	exception EventsException
	{
		short code;
		string why;
	};

	struct LrgsEvent      // Data structure to hold an LRGS Event
	{
		short priority;   // See constant PRIORITY definitions
		long time;        // Unix time_t value
		short errno;      // Unix errno associated with event
		short derrno;     // LRGS-specific error code
		short msgnum;     // Trigger events have message number associated
		string source;    // Name of process that generated the event
		string text;      // Event text
	};

	interface LrgsEventQueue
	{
		LrgsEvent getEvent(out boolean has_event);

		void setMinPriority(in short min);
		void setMaxPriority(in short max);

		void disconnect();

		long getLrgsTime();
	};

	interface LrgsEventAdmin
	{
		LrgsEventQueue connect(in short backlog)
			raises(EventsException);
	};
};
