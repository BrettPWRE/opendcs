/*
*  $Id$
*
*  $State$
*
*  $Log$
*  Revision 1.1  2008/04/04 18:21:12  cvs
*  Added legacy code to repository
*
*  Revision 1.7  2003/04/25 20:19:26  mjmaloney
*  Fixed problems between LrgsDirectory and Directory.
*
*  Revision 1.6  2002/12/27 20:17:27  mjmaloney
*  dev.
*
*  Revision 1.5  2001/02/03 00:06:11  mike
*  dev
*
*  Revision 1.4  2001/01/29 21:42:04  mike
*  Added advertiser.
*
*  Revision 1.3  2001/01/27 14:33:39  mike
*  dev
*
*  Revision 1.2  2001/01/26 18:58:15  mike
*  Created.
*
*  Revision 1.1  2001/01/25 01:25:33  mike
*  created
*
*/

#include "../apistatus/LrgsStatus.idl"
#include "../apiadmin/apiadmin.idl"
#include "../apievents/apievents.idl"

module directory
{
	struct LrgsSystemStatus
	{
		string hostname;
		boolean isUsable;
		long lastMsgIndex;
		short numClients;
	};
	typedef sequence<LrgsSystemStatus> LrgsSystemStatusList;
	typedef sequence<string> StringList;

	/**
	  This is the external view of the LRGS, available to clients over the
	  network.
	*/
	interface LrgsSystem
	{
		LrgsSystemStatus getStatus();

		// The component services of an LRGS:
		apiadmin::LrgsGateKeeper getGateKeeperSvc()
			raises(apicommon::NoServiceException);

		apievents::LrgsEventAdmin getEventAdminSvc()
			raises(apicommon::NoServiceException);

		apistatus::LrgsStatus getLrgsStatusSvc()
			raises(apicommon::NoServiceException);

		apicommon::SharedFileDigestFactory getSharedFileDigestFactory()
			raises(apicommon::NoServiceException);

		StringList getNetworkListNames()
			raises(apicommon::NoFileException);

		apicommon::SharedFileDigest getNetworkList(in string name)
			raises(apicommon::NoFileException);
	};

	/**
	  External view of the directory. Clients use the directory to advertise
	  their services. The local system is automatically advertised.
	*/
	interface Directory
	{
		// return a list of LRGS systems advertised here:
		LrgsSystemStatusList getSystems()
			raises(apicommon::NoServiceException);

		// Return a system by its host name.
		LrgsSystem getSystemByName( in string hostname )
			raises(apicommon::NoServiceException);

		void registerSystem(in LrgsSystem sys, in LrgsSystemStatus stat);

		void unRegisterSystem(in string hostname);
	};

	/**
	  This object is not accessible outside this machine.
	*/
	interface DirectoryInternal
	{
		void reloadProperties();
	};
	
};
